#!/bin/bash

package_name=''
snakes=''
executable_name=''

source installer.conf

# Based off of installer presented at:  http://www.linuxjournal.com/node/1005818

echo "Running Installer"

# Install steps go here

# The HOME environment variable is required
if [[ -z "${HOME}" ]]; then
    echo "Your HOME environment variable is not set and is required.  Please set and try again."
    exit 1
fi

# if not installed, install virtualenv

# find the first python in snakes that is available on the target system and place in python_path

for pypath in ${snakes}
do
    echo "checking if $pypath is on your PATH"
    if command -v "$pypath" 2>/dev/null >/dev/null; then
        echo "$pypath is available"
        python_path=`command -v "$pypath"`
        break;
    else
        echo "$pypath is not available."
    fi
done

# make sure we have a supported python

if [[ -z ${python_path} ]]; then
    echo "This system does not have a supported python ($snakes) on the path"
    exit 1
fi

# install virtualenv if it is not already installed

if command -v virtualenv 2>/dev/null; then
    echo "virtualenv already installed"
else
    echo "installing virtualenv"
    if ! command -v pip 2>/dev/null 1>/dev/null; then
        sudo easy_install pip
    fi
    if command -v pip 2>/dev/null 1>/dev/null; then
        sudo pip install virtualenv
    else
        echo "This is not a supported distribution.  Please manually install virtualenv then try this install again."
        exit 1
    fi
fi

# create virtualenv

echo "virtualenv directory is: ${WORKON_HOME:=${HOME}/.virtualenvs}"
mkdir -p "${WORKON_HOME:=${HOME}/.virtualenvs}"

venv="${WORKON_HOME:=${HOME}/.virtualenvs}"/"${executable_name}"
virtualenv -p ${python_path} ${venv}
source ${venv}/bin/activate
pip install --upgrade pip
pip install --upgrade setuptools

# install payload package into virtual environment

pip install *.tar.gz
pip install "${package_name}"

# upgrade packages
pip list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U

# symbolically link package script onto path

if [[ -x "${venv}/bin/${executable_name}" ]]; then
    # try to force using ${HOME}/bin
    mkdir -p "${HOME}/bin"
    if [[ -d "${HOME}/bin" ]]; then
        # install console script into ${HOME}/bin
        rm -f "${HOME}/bin/${executable_name}"
        ln -s "${venv}/bin/${executable_name}" "${HOME}/bin/${executable_name}"
        echo "${executable_name} installed to ${HOME}/bin"
        if ! [[ ":$PATH:" == *":${HOME}/bin:"* ]]; then
            echo "Please add \"${HOME}/bin\" to your PATH"
        fi
    elif [[ -d /usr/local/bin ]]; then
        # should not happen, but just in case...
        # install console script into /usr/local/bin
        sudo rm -f "/usr/local/bin/${executable_name}"
        sudo ln -s "${venv}/bin/${executable_name}" "/usr/local/bin/${executable_name}"
        echo "${executable_name} installed to /usr/local/bin"
        if ! [[ ":$PATH:" == *":/usr/local/bin:"* ]]; then
            echo "Please add \"/usr/local/bin\" to your PATH"
        fi
    else
        # should NEVER happen, but just in case...
        # can't install console script so ask user to add it to their path.
        echo "Please symbolically link ${venv}/bin/${executable_name} to somewhere on your path."
    fi
else
    echo "There was a problem with the install and the executable is not available:  ${venv}/bin/${executable_name}"
fi

echo
exit 0
